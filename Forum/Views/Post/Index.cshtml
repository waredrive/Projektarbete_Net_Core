@model PostsIndexVm
@{
  ViewBag.Title = @Model.ThreadText;
}
<div class="container-fluid">
  <div class="col-md-12">
    <div class="row">
      <h3 class="text-light pt-2">
        @if (Model.IsThreadLocked) {
          <i class="fas fa-ban fa-lg text-danger"></i>
        }
        @Model.ThreadText
      </h3>
    </div>
    <div class="my-auto row pt-2">
      @await Component.InvokeAsync("ThreadOptions", @Model.ThreadId)
    </div>
  </div>
  @if (Model.IsAuthorizedForPostCreate) {
    <div class="col-md-12 py-3">
      <div class="row">
        <a asp-controller="Post" asp-action="Create" class="btn btn-primary">Add new post</a>
      </div>
    </div>
  }
  <nav>
    <ol class="breadcrumb bg-secondary">
      <li class="breadcrumb-item">
        <a asp-controller="Topic" asp-action="index" class="light">Forum</a>
      </li>
      <li class="breadcrumb-item">
        <a asp-controller="Thread" asp-action="index" asp-route-topicId="@Model.TopicId" asp-route-page="1" class="light">@Model.TopicText</a>
      </li>
      <li class="breadcrumb-item active">
        <a asp-controller="Post" asp-action="index" class="light">@Model.ThreadText</a>
      </li>
    </ol>
  </nav>
  <div class="row">
    <div class="col-md-12">
      <table class="table table-striped table-dark">
        @foreach (var post in Model.Posts) {
          <tr id="@post.PostId">
            <td class="align-middle" style="width: 10%">
              <div class="card bg-secondary text-center" style="max-width: 200px; min-width: 200px;">
                <a asp-controller="Profile" asp-action="Details" asp-route-username="@post.CreatedBy" class="light">
                  <div class="card-header">
                    @post.CreatedBy
                  </div>
                </a>
                <div class="card-img-top">
                  <img class="mt-3 rounded align-center" src="data:image;base64,@post.CreatorsProfileImage" alt="Profile picture" style="width: 120px; height: 120px" />
                </div>
                <div class="card-body">
                  <p class="card-title">@string.Join(", ", post.CreatorsRoles)</p>
                  <p class="card-text small">@post.CreatorsTotalposts posts</p>
                </div>
                <div class="card-footer">
                  @if (post.CreatedBy != User.Identity.Name) {
                    @await Component.InvokeAsync("MemberOptions", post.CreatedBy)
                  }
                </div>
              </div>
            </td>
            <td style="height: 1px;">
              <div class="d-flex flex-column h-100">
                <div>
                  <p class="small">Posted @post.CreatedOn</p>
                </div>
                <div class="mb-auto">
                  <p class="">@post.PostText</p>
                </div>
                <div class="d-flex">
                  <div>
                    @if (post.EditedBy != null) {
                      <p class="small pb-0 mb-0">
                        Edited by
                        <a asp-controller="Profile" asp-action="Details" asp-route-username="@post.EditedBy" class="light">@post.EditedBy</a>, @post.EditedOn
                      </p>
                    }
                    @if (post.LockedBy != null) {
                      <p class="small pb-0 mb-0">
                        Locked by
                        <a asp-controller="Profile" asp-action="Details" asp-route-username="@post.LockedBy" class="light">@post.LockedBy</a>, @post.LockedOn
                      </p>
                    }
                  </div>
                  <div class="ml-auto align-self-center">
                    @await Component.InvokeAsync("PostOptions", post.PostId)
                  </div>
                </div>
              </div>
            </td>
          </tr>
        }
      </table>
      <div>
        <partial name="_PaginationPartial" for="@Model.Pager" />
      </div>
    </div>
  </div>
</div>

@section footer {
  @await Component.InvokeAsync("Footer")
}
