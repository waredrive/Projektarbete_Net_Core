@model ThreadsIndexVm
@{
  ViewBag.Title = @Model.TopicText;
}
<div class="container-fluid">
  <div class="col-md-12">
    <div class="row">
      <h1 class="text-light">@Model.TopicText</h1>
      <div class="my-auto ml-3">
        @await Component.InvokeAsync("TopicOptions", @Model.TopicId)
      </div>
    </div>
  </div>
  @if (@Model.IsAuthorizedForThreadCreate) {
    <div class="col-md-12 py-3">
      <div class="row">
        <a asp-controller="Thread" asp-action="Create" class="btn btn-primary">Add new thread</a>
      </div>
    </div>
  }
  <nav aria-label="breadcrumb">
    <ol class="breadcrumb">
      <li class="breadcrumb-item" aria-current="page">
        <a asp-controller="Topic" asp-action="index">Forum</a>
      </li>
      <li class="breadcrumb-item" aria-current="page">
        <a asp-controller="Thread" asp-action="index">@Model.TopicText</a>
      </li>
    </ol>
  </nav>
  <div class="row">
    <div class="col-md-12">
      <table class="table table-striped table-dark">
        @foreach (var thread in Model.Threads) {
          <tr>
            <td style="width: 80px;" class="align-middle">
              @if (thread.LockedBy != null) {
                <i class="fas fa-ban fa-3x text-danger"></i>
              } else {
                <i class="fas fa-comment fa-3x"></i>
              }
            </td>
            <td class="align-middle">
              <a asp-controller="Post" asp-action="index" asp-route-threadId="@thread.ThreadId" class="light">
                <p class="pb-0 mb-0">@thread.ThreadText</p>
              </a>
              <small>Started by <a asp-controller="Profile" asp-action="Details" asp-route-returnurl="@ViewBag.ReturnUrl" asp-route-username="@thread.CreatedBy" class="light">@thread.CreatedBy</a>, @thread.CreatedOn</small>
            </td>
            <td class="align-middle">
              <p>
                @thread.PostCount
                @if (thread.PostCount == 1) {<span>reply</span>} else {<span>replies</span>}
              </p>
            </td>
            <td class="align-middle">
              @await Component.InvokeAsync("ThreadOptions", thread.ThreadId)
            </td>
          </tr>
        }
      </table>
    </div>
  </div>
  <div class="row">
    <div class="col-md-12 text-light">
      OTHER STUFF
    </div>
  </div>
</div>

