@model ThreadsIndexVm
@{
  ViewBag.Title = @Model.TopicText;
}
<div class="container-fluid">
  <div class="col-md-12">
    <div class="row">
      <h3 class="text-light pt-2">
      @if (Model.IsTopicLocked) {
        <i class="fas fa-ban fa-lg text-danger"></i>
      }
        @Model.TopicText
      </h3>
    </div>
    <div class="my-auto row pt-2">
      @await Component.InvokeAsync("TopicOptions", new{ topicId = @Model.TopicId })
    </div>
  </div>
  @if (@Model.IsAuthorizedForThreadCreate) {
    <div class="col-md-12 py-3">
      <div class="row">
        <a asp-controller="Thread" asp-action="Create" class="btn btn-primary">Add new thread</a>
      </div>
    </div>
  }
  <nav>
    <ol class="breadcrumb bg-secondary">
      <li class="breadcrumb-item">
        <a asp-controller="Topic" asp-action="index" class="light">Forum</a>
      </li>
      <li class="breadcrumb-item active">
        <a asp-controller="Thread" asp-action="index" asp-route-page="1" class="light">@Model.TopicText</a>
      </li>
    </ol>
  </nav>
  <div class="row">
    <div class="col-md-12">
      <table class="table table-striped table-dark">
        @foreach (var thread in Model.Threads) {
          <tr>
            <td style="width: 80px;" class="align-middle">
              @if (thread.LockedBy != null) {
                <i class="fas fa-ban fa-3x text-danger"></i>
              } else {
                <i class="fas fa-comment fa-3x"></i>
              }
            </td>
            <td class="align-middle">
              <a asp-controller="Post" asp-action="index" asp-route-threadId="@thread.ThreadId" class="light">
                <p class="pb-0 mb-0">@thread.ThreadText</p>
              </a>
              <small>Started by <a asp-controller="Profile" asp-action="Details" asp-route-username="@thread.CreatedBy" class="light">@thread.CreatedBy</a>, @thread.CreatedOn</small>
            </td>
            <td class="align-middle">
              <p class="small pb-0 mb-0">
                @thread.PostCount
                @if (thread.PostCount == 1) {<span>reply</span>} else {<span>replies</span>}
              </p>
            </td>
            <td class="align-middle">
              @await Component.InvokeAsync("ThreadOptions", new{threadId = thread.ThreadId } )
            </td>
            @if (@thread.LatestPoster != null) {
              <td style="width: 50px;" class="align-middle pr-0">
                <img class="rounded float-left" src="@Url.Action("ProfileImage", "Profile", new{username = thread.LatestPoster})" alt="Profile picture" style="width: 50px; height: 50px" />
              </td>
              <td class="align-middle">
                <p class="pb-0 mb-0 small"><a asp-controller="Profile" asp-action="Details" asp-route-username="@thread.LatestPoster" class="light">@thread.LatestPoster</a></p>
                <p class="pb-0 mb-0 small">@thread.LatestPostedOn</p>
              </td>
            } else {
              <td style="width: 50px;" class="align-middle pr-0"></td>
              <td class="align-middle"></td>
            }
          </tr>
        }
      </table>
      <div>
        <partial name="_PaginationPartial" for="@Model.Pager" />
      </div>
    </div>
  </div>
</div>

@section footer {
  @await Component.InvokeAsync("Footer")
}


